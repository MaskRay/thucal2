// Generated by IcedCoffeeScript 1.4.0b
(function() {
  var combine, getOrigin;

  window.getOrigin = getOrigin = function(Gr, L) {
    var it, lastDay, lastItem, lastItems, maxW, p, w, z, _i, _j, _len, _ref;
    lastDay = L[L.length - 1];
    lastItems = lastDay.items;
    lastItem = lastItems[lastItems.length - 1];
    z = lastDay.ymd.day();
    maxW = 0;
    for (p = _i = 6; _i >= 1; p = _i += -1) {
      _ref = Gr[z][p];
      for (_j = 0, _len = _ref.length; _j < _len; _j++) {
        it = _ref[_j];
        if (it.name === lastItem.name && (w = it.week[it.week.length - 1]) > maxW) {
          maxW = w;
        }
      }
    }
    return lastDay.ymd.clone().subtract(maxW - 1, 'weeks').subtract(z - 1, 'days');
  };

  window.combine = combine = function(Gr, L, origin) {
    var Lrel, bin, gi, li, p, rel, w, x, z, _i, _j, _k, _l, _len, _len1, _len2, _m, _ref;
    Lrel = [];
    for (_i = 0, _len = L.length; _i < _len; _i++) {
      x = L[_i];
      Lrel[x.ymd.diff(origin, 'days')] = x.items;
    }
    for (z = _j = 1; _j <= 7; z = _j += 1) {
      for (p = _k = 1; _k <= 6; p = _k += 1) {
        _ref = Gr[z][p];
        for (_l = 0, _len1 = _ref.length; _l < _len1; _l++) {
          gi = _ref[_l];
          w = gi.week;
          w = w[w.length - 1];
          rel = (w - 1) * 7 + (z - 1);
          if ((bin = Lrel[rel])) {
            for (_m = 0, _len2 = bin.length; _m < _len2; _m++) {
              li = bin[_m];
              if (!li.matched && li.name === gi.name) {
                li.matched = true;
                gi.beginT = li.beginT;
                gi.endT = li.endT;
                gi.loc = li.loc;
                break;
              }
            }
          }
        }
      }
    }
    return Gr;
  };

  $(document).ready(function() {
    var Gl, Gr, L, origin, _ref;
    L = parse_L($('#Lspan'), parseTermId('2012-2013-2'));
    _ref = parse_G($('#Gspan')), Gr = _ref.Gr, Gl = _ref.Gl;
    window.L = L;
    window.Gr = Gr;
    window.Gl = Gl;
    window.origin = origin = getOrigin(Gr, L);
    return combine(Gr, L, origin);
  });

}).call(this);
