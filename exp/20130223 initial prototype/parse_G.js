// Generated by IcedCoffeeScript 1.4.0b
(function() {
  var parse_G;

  window.parseRegLoc = function(infoStr) {
    var _ref;
    return (_ref = infoStr.match(/[\(；]([^\(；]+)\)$/)) != null ? _ref[1] : void 0;
  };

  window.parseLabInfo = function(infoStr) {
    var match;
    if ((match = infoStr.match(/(.*)\(([^\)；]+).*\)$/)) != null) {
      return {
        labName: match[1].trim(),
        loc: match[2].trim()
      };
    } else {
      return {
        labName: '',
        loc: ''
      };
    }
  };

  window.parse_G = parse_G = function(root) {
    var Gl, Gr, cell, p, z, _i, _j;
    Gr = buildArray([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6]);
    Gl = buildArray([1, 2, 3, 4, 5, 6, 7], [1, 2, 3, 4, 5, 6]);
    for (z = _i = 1; _i <= 7; z = _i += 1) {
      for (p = _j = 1; _j <= 6; p = _j += 1) {
        Gr[z][p] = [];
        Gl[z][p] = [];
        cell = $("#a" + p + "_" + z);
        cell.find('a.mainHref').each(function() {
          var beginT, endT, infoStr, loc, _ref;
          infoStr = this.nextSibling.data.trim();
          loc = parseRegLoc(infoStr);
          _ref = period[p], beginT = _ref.beginT, endT = _ref.endT;
          return Gr[z][p].push({
            name: this.innerText.trim(),
            infoStr: infoStr,
            loc: loc,
            labName: '',
            week: parseWeekStr(infoStr),
            beginT: beginT,
            endT: endT
          });
        });
        cell.find('a.blue_red_none').each(function() {
          var beginT, endT, infoStr, labName, loc, t, _ref, _ref1;
          infoStr = this.nextElementSibling.innerText.trim();
          _ref = parseLabInfo(infoStr), labName = _ref.labName, loc = _ref.loc;
          if ((t = parseTimeStr(infoStr)) != null) {
            beginT = t.beginT, endT = t.endT;
          } else {
            _ref1 = period[p], beginT = _ref1.beginT, endT = _ref1.endT;
          }
          return Gl[z][p].push({
            name: this.innerText.trim(),
            infoStr: infoStr,
            loc: loc,
            labName: labName,
            week: parseWeekStr(infoStr),
            beginT: beginT,
            endT: endT
          });
        });
      }
    }
    return {
      Gr: Gr,
      Gl: Gl
    };
  };

}).call(this);
